[
    {
        "question" : "রিএক্ট কীভাবে কাজ করে?",
        "answer" : "রিএক্ট হলো ইউজার ইন্টারফেস তৈরি করার জন্য একটি জাভাস্ক্রিপ্ট লাইব্রেরি। ইউজার ইন্টারফেস তৈরি করার সময় রিএক্ট যখন আমার টুল, তখন আমি জটিল ইউজার ইন্টারফেসকে ছোট ছোট ভাগে ভাগ করি। প্রতিটি ছোট ছোট ভাগ এপলিকেশন ডাটার বিভিন্ন টুকরোর ওপর নির্ভর করে। প্রতিটি ছোট ছোট ভাগের জন্য আমি কম্পোনেন্ট লিখি। একই কম্পোনেন্ট ভিন্ন ডাটা দিয়ে একাধিক ছোট ছোট ভাগের জন্য রিইউজ করা যায়। কিছু কম্পোনেন্ট এপলিকেশন ডাটার এক বা একাধিক টুকরোকে স্টেট হিসেবে ম্যানেজ করে। এরা অন্য কম্পোনেন্টদেরকে এই ডাটা প্রোভাইড করে। যারা এই ডাটা ম্যানেজ করার অধিকার বাদে ব্যবহার করতে পায়, তাদের জন্য এই ডাটা প্রপস। কম্পোনেন্টের ভিতরে যেকোনো সময়ে স্টেট কেমন হবে, ইউআই কেমন হবে, এর একটি ইভেন্ট, প্রপস ও স্টেটনির্ভর বর্ণনা আমি লিখে দেই। এরপর যেকোনো ইভেন্টে স্টেট চেঞ্জ হলে ব্রাউজার ডম আপডেট করে ইউআই চেঞ্জ করার কাজটা রিএক্ট করে। এবং কম্পিউটিং পাওয়ারের অর্থে ব্যয়সাধ্য ব্রাউজার ডম আপডেটকে ইফিসিয়েন্ট করতে রিএক্ট ভার্চুয়াল ইন-মেমোরি ডম, ডিফ এ্যালগরিদমসহ বিভিন্ন এ্যালগরিদম বা মেমোরি টেকনিক ব্যবহার করে। ইভেন্ট হ্যান্ডলিংকে ইফিসিয়েন্ট করতে রিএক্ট ব্রাউজার ডমে কেবল একটি ইভেন্ট হ্যান্ডলার যোগ করে; document অবজেক্টে। তদুপরি, ব্রাউজারের দেওয়া ইভেন্ট অবজেক্টকে কাজের সুবিধার্থে Synthetic Event অবজেক্টে Wrap করে। কিন্তু এই Wrapping-ও ব্যয়সাধ্য বলে, রিএক্ট একই টাইপের ইভেন্টের জন্য Synthetic Event অবজেক্টকে রিইউজ করে, যেটাকে Event Polling Technique বলে। লো লেভেল জটিলতায় না গিয়ে যদি রিএক্ট কীভাবে কাজ করে, তা বলতে হয়, তাহলে এভাবেই রিএক্ট কাজ করে। রিএক্টের সাথে কাজ করা তাই মজার। রিএক্ট অনেক লক্ষ্মী একজন Co-worker। Declarative UI Programming!"
    },
    {
        "question" : "স্টেট ও প্রপ্‌সের মধ্যে পার্থক্য কী?",
        "answer" : "স্টেট ও প্রপ দুইটাই এপলিকেশন ডাটা বা এপলিকেশন স্টেট। তবে একটি রিএক্ট কম্পোনেন্টের দৃষ্টিকোণ থেকে, স্টেট হলো ঐ ডাটা, যা ম্যানেজমেন্টের দায়িত্ব বা একচ্ছত্র অধিকার কম্পোনেন্টের নিজের। যেমন— স্টেট ইনিশিয়ালাইজ করা, আপডেট করা, অন্যান্য কম্পোনেন্টদেরকে স্টেট প্রোভাইড করা ইত্যাদি।\n\n\n\nঅন্যদিকে, প্রপস হলো ঐ ডাটা, যা একটি কম্পোনেন্ট এর প্যারেন্ট থেকে পেয়ে থাকে। একটি কম্পোনেন্ট নিজ স্টেট পরিবর্তন করতে পারে এবং এক্ষেত্রে এর একচ্ছত্র অধিকার। কিন্তু একটি কম্পোনেন্ট এর প্রপস রিড করতে পারে, কিন্তু আপডেট করতে পারে না।"
    },
    {
        "question" : "সার্ভার থেকে ডাটা লোড করা বাদে useEffect() হুকের ব্যবহার কী?",
        "answer" : [
            "একটি রিএক্ট কম্পোনেন্টের প্রধান কাজ ইউআই রেন্ডার করা তথা JSX রিটার্ন করা। এই প্রধান কাজের পরে মানে, রেন্ডার হওয়ার পরে বাকি সব কাজই কম্পোনেন্টের ওপর বা কম্পোনেন্টের Side Effect।",
            "অর্থাৎ useEffect() হুকের সর্বায়নকৃত (Generalized) ব্যবহার হলো Side Effect বা Effect এক্সিকিউট করা।",
            "একটি কম্পোনেন্ট রেন্ডার হওয়ার পর আমরা যদি কম্পোনেন্টটির সাথে জড়িত এমন কিছু করতে চাই, যা কম্পোনেন্টটির স্টেট, রেন্ডারিং, স্টাইল বা বিহ্যাভিয়ার-এর ওপর প্রভাব (Effect) ফেলবে, তখন তা আমরা useEffect হুক দিয়ে করি।",
            "সার্ভার থেকে ডাটা লোড করা একটি সাইড ইফেক্ট, যা ঘটনাক্রমে এসিনক্রোনাস। সাধারণভাবে, setTimer() ও setInterval-সহ যেকোনো এসিনক্রোনাস টাস্ক useEffect দিয়ে করা যায়।",
            "সরাসরি DOM Manipulation (যেমন— Document-এর title চেঞ্জ করা)-সহ যেকোনো Imperative API ইউজ করা যায় useEffect()-এর মধ্যে।"
        ]
    }
]